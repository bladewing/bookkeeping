# pull official base image
FROM python:3.9.0-alpine as builder

# set work directory
WORKDIR /usr/src/bookkeeping

# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

RUN apk update \
    && apk add postgresql-dev gcc python3-dev musl-dev

# install dependencies
RUN pip install --upgrade pip
RUN pip install flake8
COPY . .
RUN flake8 --ignore=E501,F401 .

COPY ./requirements.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/bookkeeping/wheels -r requirements.txt


#########
# FINAL #
#########

# pull official base image
FROM python:3.9.0-alpine

# create directory for the app user
RUN mkdir -p /home/bookkeeping

# create the app user
RUN addgroup -S bookkeeping && adduser -S bookkeeping -G bookkeeping

# create the appropriate directories
ENV HOME=/home/bookkeeping
ENV APP_HOME=/home/bookkeeping/web
RUN mkdir $APP_HOME
RUN mkdir $APP_HOME/staticfiles
WORKDIR $APP_HOME

# install dependencies
RUN apk update && apk add libpq
COPY --from=builder /usr/src/bookkeeping/wheels /wheels
COPY --from=builder /usr/src/bookkeeping/requirements.txt .
RUN pip install --no-cache /wheels/*

# copy entrypoint-prod.sh
COPY ./entrypoint.prod.sh $APP_HOME
RUN chmod +x /home/bookkeeping/web/entrypoint.prod.sh

# copy project
COPY . $APP_HOME

# chown all the files to the app user
RUN chown -R bookkeeping:bookkeeping $APP_HOME

# change to the app user
USER bookkeeping

# copy project
COPY . .

ENTRYPOINT ["/home/bookkeeping/web/entrypoint.prod.sh"]